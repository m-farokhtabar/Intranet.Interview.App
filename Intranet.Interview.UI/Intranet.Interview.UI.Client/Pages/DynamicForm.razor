@page "/dynamic-form"
@using Intranet.Interview.UI.Client.Model
@using Intranet.Interview.UI.Client.Services.FormSrv
@rendermode InteractiveWebAssembly
@inject IFormService FormSrv
@inject IDialogService DialogService

<MudDialogProvider />
<PageTitle>@metaForm?.Title</PageTitle>


@if (metaForm is not null)
{
    <DataForm MetaForm="metaForm" OnSubmit="OnValidSubmit" />
}

@code {
    private FormMetadata? metaForm = null;
    private readonly DialogOptions option = new () { MaxWidth = MaxWidth.Medium, FullWidth = true };

    protected override async Task OnInitializedAsync()
    {        
        metaForm = await FormSrv.GetFormMeta(Guid.Parse("c62b97fa-df48-41a4-bc05-d7f1f3b2d8c0"));
    }    
    private async Task OnValidSubmit()
    {
        (bool serverStatus, string json) = await FormSrv.PostFormData(metaForm!.Fields);
        string Message = serverStatus ? $"The {metaForm?.Title} has been saved successfully." : "There is an error during sending data to server";
        var parameters = new DialogParameters
        {
            { "Message",  Message},
            { "Content", json}
        };
        DialogService.Show<Dialog>("Information Form", parameters, option);
    }
}
